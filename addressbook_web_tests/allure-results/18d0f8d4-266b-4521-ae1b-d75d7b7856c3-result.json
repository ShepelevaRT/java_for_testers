{"uuid":"18d0f8d4-266b-4521-ae1b-d75d7b7856c3","historyId":"4f76b37ea825caabeb1cf0ae42ee9a0b","testCaseId":"[engine:junit-jupiter]/[class:ru.stqa.addressbook.tests.ContactCreationTest]/[test-template:canCreateMultipleContact(ru.stqa.addressbook.model.ContactData)]","testCaseName":"canCreateMultipleContact(ContactData)","fullName":"ru.stqa.addressbook.tests.ContactCreationTest.canCreateMultipleContact","labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:ru.stqa.addressbook.tests.ContactCreationTest]/[test-template:canCreateMultipleContact(ru.stqa.addressbook.model.ContactData)]/[test-template-invocation:#3]"},{"name":"host","value":"shepeleva"},{"name":"thread","value":"20748@shepeleva.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"ru.stqa.addressbook.tests.ContactCreationTest"},{"name":"testClass","value":"ru.stqa.addressbook.tests.ContactCreationTest"},{"name":"testMethod","value":"canCreateMultipleContact"},{"name":"suite","value":"ru.stqa.addressbook.tests.ContactCreationTest"}],"links":[],"name":"canCreateMultipleContact(ContactData) [3] ContactData[id=, firstname=eiopzwynqz, middlename=wuprufljsy, lastname=ipgxspretc, nickname=xjbbygfhac, photo=src/test/resources/images/avatar.png, title=kvjuxblhxk, company=uoxhnbhgpb, address=ndniasamtb, home=spqfxmgcev, mobile=null, work=null, phone2=null, email=uwlqiwbeat, email2=null, email3=null, homepage=phppaxpaju, bday=7, bmonth=September, byear=1980, aday=2, amonth=March, ayear=2000]","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected: <[ContactData[id=1625, firstname=, middlename=, lastname=, nickname=, photo=src/test/resources/images/avatar.png, title=, company=, address=, home=, mobile=, work=, phone2=, email=, email2=, email3=, homepage=, bday=1, bmonth=-, byear=, aday=1, amonth=-, ayear=], ContactData[id=1626, firstname=moqvs, middlename=, lastname=rrpun, nickname=, photo=src/test/resources/images/avatar.png, title=, company=, address=, home=, mobile=, work=, phone2=, email=, email2=, email3=, homepage=, bday=1, bmonth=-, byear=, aday=1, amonth=-, ayear=], ContactData[id=1627, firstname=eiopzwynqz, middlename=, lastname=ipgxspretc, nickname=, photo=src/test/resources/images/avatar.png, title=, company=, address=, home=, mobile=, work=, phone2=, email=, email2=, email3=, homepage=, bday=1, bmonth=-, byear=, aday=1, amonth=-, ayear=]]> but was: <[ContactData[id=1625, firstname=, middlename=, lastname=, nickname=, photo=src/test/resources/images/avatar.png, title=, company=, address=, home=, mobile=, work=, phone2=, email=, email2=, email3=, homepage=, bday=1, bmonth=-, byear=, aday=1, amonth=-, ayear=], ContactData[id=1626, firstname=moqvs, middlename=, lastname=rrpun, nickname=, photo=src/test/resources/images/avatar.png, title=, company=, address=, home=, mobile=, work=, phone2=, email=, email2=, email3=, homepage=, bday=1, bmonth=-, byear=, aday=1, amonth=-, ayear=], ContactData[id=1627, firstname=eiopzwynqz, middlename=, lastname=ipgxspretc, nickname=, photo=src/test/resources/images/avatar.png, title=, company=, address=, home=, mobile=, work=, phone2=, email=, email2=null, email3=null, homepage=, bday=1, bmonth=-, byear=, aday=1, amonth=-, ayear=]]>","trace":"org.opentest4j.AssertionFailedError: expected: <[ContactData[id=1625, firstname=, middlename=, lastname=, nickname=, photo=src/test/resources/images/avatar.png, title=, company=, address=, home=, mobile=, work=, phone2=, email=, email2=, email3=, homepage=, bday=1, bmonth=-, byear=, aday=1, amonth=-, ayear=], ContactData[id=1626, firstname=moqvs, middlename=, lastname=rrpun, nickname=, photo=src/test/resources/images/avatar.png, title=, company=, address=, home=, mobile=, work=, phone2=, email=, email2=, email3=, homepage=, bday=1, bmonth=-, byear=, aday=1, amonth=-, ayear=], ContactData[id=1627, firstname=eiopzwynqz, middlename=, lastname=ipgxspretc, nickname=, photo=src/test/resources/images/avatar.png, title=, company=, address=, home=, mobile=, work=, phone2=, email=, email2=, email3=, homepage=, bday=1, bmonth=-, byear=, aday=1, amonth=-, ayear=]]> but was: <[ContactData[id=1625, firstname=, middlename=, lastname=, nickname=, photo=src/test/resources/images/avatar.png, title=, company=, address=, home=, mobile=, work=, phone2=, email=, email2=, email3=, homepage=, bday=1, bmonth=-, byear=, aday=1, amonth=-, ayear=], ContactData[id=1626, firstname=moqvs, middlename=, lastname=rrpun, nickname=, photo=src/test/resources/images/avatar.png, title=, company=, address=, home=, mobile=, work=, phone2=, email=, email2=, email3=, homepage=, bday=1, bmonth=-, byear=, aday=1, amonth=-, ayear=], ContactData[id=1627, firstname=eiopzwynqz, middlename=, lastname=ipgxspretc, nickname=, photo=src/test/resources/images/avatar.png, title=, company=, address=, home=, mobile=, work=, phone2=, email=, email2=null, email3=null, homepage=, bday=1, bmonth=-, byear=, aday=1, amonth=-, ayear=]]>\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)\r\n\tat org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)\r\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\r\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\r\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\r\n\tat ru.stqa.addressbook.tests.ContactCreationTest.canCreateMultipleContact(ContactCreationTest.java:166)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n"},"stage":"finished","description":"","steps":[],"attachments":[],"parameters":[{"name":"UniqueId","value":"[engine:junit-jupiter]/[class:ru.stqa.addressbook.tests.ContactCreationTest]/[test-template:canCreateMultipleContact(ru.stqa.addressbook.model.ContactData)]/[test-template-invocation:#3]","mode":"hidden"}],"start":1727879916000,"stop":1727879918732}