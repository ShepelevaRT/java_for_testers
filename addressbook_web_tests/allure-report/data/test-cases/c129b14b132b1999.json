{"uid":"c129b14b132b1999","name":"canCreateMultipleGroups(GroupData) [1] GroupData[id=, name=, header=, footer=]","fullName":"ru.stqa.addressbook.tests.GroupCreationTests.canCreateMultipleGroups","historyId":"472200fa58dcb45df3b8f2e7dd1f7237","time":{"start":1727883138683,"stop":1727883139285,"duration":602},"description":"","status":"broken","statusMessage":"DB is corrupted","statusTrace":"java.lang.IllegalStateException: DB is corrupted\r\n\tat ru.stqa.addressbook.manager.JdbcHelper.checkConsistency(JdbcHelper.java:77)\r\n\tat ru.stqa.addressbook.tests.TestBase.checkDatabaseConsistency(TestBase.java:28)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":6,"retriesStatusChange":true,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:ru.stqa.addressbook.tests.GroupCreationTests]/[test-template:canCreateMultipleGroups(ru.stqa.addressbook.model.GroupData)]/[test-template-invocation:#1]"},{"name":"host","value":"shepeleva"},{"name":"thread","value":"15240@shepeleva.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"ru.stqa.addressbook.tests.GroupCreationTests"},{"name":"testClass","value":"ru.stqa.addressbook.tests.GroupCreationTests"},{"name":"testMethod","value":"canCreateMultipleGroups"},{"name":"suite","value":"ru.stqa.addressbook.tests.GroupCreationTests"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b02ac37f63d1dc16","status":"passed","time":{"start":1727882716358,"stop":1727882716958,"duration":600}},{"uid":"e4279d3de14220bd","status":"passed","time":{"start":1727882329026,"stop":1727882329625,"duration":599}},{"uid":"254c9588c9c15c0c","status":"passed","time":{"start":1727880713839,"stop":1727880714396,"duration":557}},{"uid":"8ceed8686736a115","status":"passed","time":{"start":1727880467101,"stop":1727880467634,"duration":533}},{"uid":"dc8962df139aa9e3","status":"passed","time":{"start":1727879632405,"stop":1727879632994,"duration":589}},{"uid":"1131ffea875d2d2b","status":"broken","statusDetails":"DB is corrupted","time":{"start":1727878493944,"stop":1727878494583,"duration":639}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":1,"unknown":0,"total":3},"items":[{"uid":"1ecfcefa2eae6ff9","status":"passed","time":{"start":1727879632405,"stop":1727879632994,"duration":589}},{"uid":"fbf28c974eb5206e","status":"broken","statusDetails":"DB is corrupted","time":{"start":1727878493944,"stop":1727878494583,"duration":639}}]},"tags":[]},"source":"c129b14b132b1999.json","parameterValues":[]}